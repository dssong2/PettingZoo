_current_progress_remaining:
    value: 1
_custom_logger:
    value: "False"
_episode_num:
    value: 0
_last_episode_starts:
    value: '[ True]'
_last_obs:
    value: |-
        [[ 0.00999937  0.00999904  0.          0.         -0.00999133 -0.00999406
          -0.00999835 -0.00999856  0.          0.        ]]
_last_original_obs:
    value: '[[ 89.  72.   0.   0. -24. -29. -55. -59.   0.   0.]]'
_logger:
    value: <stable_baselines3.common.logger.Logger object at 0x304a6caa0>
_n_updates:
    value: 0
_num_timesteps_at_start:
    value: 0
_stats_window_size:
    value: 100
_total_timesteps:
    value: 100000
_vec_normalize_env:
    value: <stable_baselines3.common.vec_env.vec_normalize.VecNormalize object at 0x174540980>
_wandb:
    value:
        cli_version: 0.20.1
        code_path: code/UAM-Toy-Env/train.py
        m: []
        python_version: 3.12.9
        t:
            "1":
                - 1
            "2":
                - 1
            "3":
                - 13
                - 16
                - 22
                - 35
                - 55
            "4": 3.12.9
            "5": 0.20.1
            "12": 0.20.1
            "13": darwin-arm64
action_noise:
    value: None
action_space:
    value: Box(-5.0, 5.0, (2,), float32)
algo:
    value: PPO
batch_size:
    value: 64
clip_range:
    value: <function get_schedule_fn.<locals>.<lambda> at 0x305d0bec0>
clip_range_vf:
    value: None
device:
    value: cpu
ent_coef:
    value: 0
env:
    value: <stable_baselines3.common.vec_env.vec_normalize.VecNormalize object at 0x174540980>
ep_info_buffer:
    value: deque([], maxlen=100)
ep_success_buffer:
    value: deque([], maxlen=100)
gae_lambda:
    value: 0.95
gamma:
    value: 0.99
learning_rate:
    value: 0.0003
lr_schedule:
    value: <function get_schedule_fn.<locals>.<lambda> at 0x30575f740>
max_grad_norm:
    value: 0.5
n_envs:
    value: 1
n_epochs:
    value: 10
n_steps:
    value: 2048
normalize_advantage:
    value: "True"
num_timesteps:
    value: 0
observation_space:
    value: Box(-inf, inf, (10,), float32)
policy:
    value: |-
        ActorCriticPolicy(
          (features_extractor): FlattenExtractor(
            (flatten): Flatten(start_dim=1, end_dim=-1)
          )
          (pi_features_extractor): FlattenExtractor(
            (flatten): Flatten(start_dim=1, end_dim=-1)
          )
          (vf_features_extractor): FlattenExtractor(
            (flatten): Flatten(start_dim=1, end_dim=-1)
          )
          (mlp_extractor): MlpExtractor(
            (policy_net): Sequential(
              (0): Linear(in_features=10, out_features=64, bias=True)
              (1): Tanh()
              (2): Linear(in_features=64, out_features=64, bias=True)
              (3): Tanh()
            )
            (value_net): Sequential(
              (0): Linear(in_features=10, out_features=64, bias=True)
              (1): Tanh()
              (2): Linear(in_features=64, out_features=64, bias=True)
              (3): Tanh()
            )
          )
          (action_net): Linear(in_features=64, out_features=2, bias=True)
          (value_net): Linear(in_features=64, out_features=1, bias=True)
        )
policy_class:
    value: <class 'stable_baselines3.common.policies.ActorCriticPolicy'>
policy_kwargs:
    value: '{}'
rollout_buffer:
    value: <stable_baselines3.common.buffers.RolloutBuffer object at 0x304710ec0>
rollout_buffer_class:
    value: <class 'stable_baselines3.common.buffers.RolloutBuffer'>
rollout_buffer_kwargs:
    value: '{}'
sde_sample_freq:
    value: -1
seed:
    value: None
start_time:
    value: 1749622467953223000
target_kl:
    value: None
tensorboard_log:
    value: ./ppo_tensorboard/
total_timesteps:
    value: 100000
use_sde:
    value: "False"
verbose:
    value: 1
vf_coef:
    value: 0.5
